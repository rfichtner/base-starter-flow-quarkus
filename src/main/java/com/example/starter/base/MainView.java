package com.example.starter.base;

import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;

import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextArea;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.VaadinSession;

/**
 * The main view contains a button and a click listener.
 */



TODO https://stackoverflow.com/questions/30528548/register-new-undertow-sessionmanager


@Route("")
public class MainView extends VerticalLayout {

	public MainView()
	{
		super();
		this.initUI();
		this.printSessionStart();
		this.label2.getElement().setProperty("innerHTML", SessionStore.getOrCreate().getEntries());
		
	}
	
	private void printSessionStart()
	{
		final VaadinSession vaadinSession = VaadinSession.getCurrent();
		final LocalDateTime created       =
			LocalDateTime.ofEpochSecond(vaadinSession.getSession().getCreationTime() / 1000, 0, ZoneOffset.UTC);
		this.label
			.setText("This session was created at " + created.format(DateTimeFormatter.ISO_DATE_TIME) + " UTC");
	}


	
	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		this.printSessionStart();
		SessionStore.getOrCreate()
			.addEntry(
				"Button was clicked " + LocalDateTime.now(ZoneId.of("Z")).format(DateTimeFormatter.ISO_DATE_TIME)
					+ " UTC");

		this.label2.getElement().setProperty("innerHTML", SessionStore.getOrCreate().getEntries());

	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.button   = new Button();
		this.textArea = new TextArea();
		this.label    = new Label();
		this.label2   = new Label();

		this.button.setText("Click me");
		this.label.setText("Label");
		this.label2.setText("Label");

		this.button.setSizeUndefined();
		this.textArea.setSizeUndefined();
		this.label.setSizeUndefined();
		this.label2.setSizeUndefined();
		this.add(this.button, this.textArea, this.label, this.label2);
		this.setSizeFull();

		this.button.addClickListener(this::button_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button   button;
	private TextArea textArea;
	private Label    label, label2;
	// </generated-code>
}
